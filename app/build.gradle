plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

static def releaseTime() {
    return new Date().format("yyyyMMdd_HH:mm:ss", TimeZone.getTimeZone("GMT+08:00"))
}

def keyProps = new Properties()
def keyPropsFile = rootProject.file('keystore/keystore.properties')
if (keyPropsFile.exists()) {
    keyProps.load(new FileInputStream(keyPropsFile))
}

android {
    compileSdk rootProject.ext.compileSdk

    defaultConfig {
        applicationId rootProject.ext.defalutConfigApplicationId
        minSdk rootProject.ext.defaultConfigMinSdk
        targetSdk rootProject.ext.defaultConfigTargetSdk
        versionCode rootProject.ext.defaultConfigVersionCode
        versionName rootProject.ext.defaultConfigVersionName

        ndk {
            // Filter for architectures supported by Flutter.
            //noinspection ChromeOsAbiSupport
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // 签名
    signingConfigs {
        release {
            keyAlias keyProps['keyAlias']
            keyPassword keyProps['keyPassword']
            storeFile keyProps['storeFile'] ? file(keyProps['storeFile']) : null
            storePassword keyProps['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 签名
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.compileOptionsSourceCompatibility
        targetCompatibility rootProject.ext.compileOptionsTargetCompatibility
    }
    kotlinOptions {
        jvmTarget = rootProject.ext.kotlinOptionsJvmTarget
    }
    //修改打包后的apk名称
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "mall_v${defaultConfig.versionName}.apk"
            }
    }
}

dependencies {
    api project(path: ':module_main')
    api project(path: ':module_rn')
    api project(path: ':module_webview')
    implementation project(':flutter')

    testImplementation 'junit:junit:4.12'
}